# Combine hindcasts from all workflows
# This script must be run before other analysis scripts

source("/projectnb2/talbot-lab-data/zrwerbin/temporal_forecast/source.R")

# Combine forecast types
div_hindcast_data <- readRDS(here("data/summary/hindcast_div.rds")) %>%
	mutate(fcast_type = "Diversity", rank = paste0("diversity_", group),
				 taxon = rank)

fg_hindcast_data <- readRDS(here("data/summary/hindcast_fg_2015-11_2018-01.rds")) %>%
	mutate(fcast_type = "Functional group")

# tax_hindcast_data <- readRDS("./data/summary/hindcast_tax_test.rds") %>%
# 	mutate(fcast_type = "Taxonomic",
# 				 fcast_period = ifelse(dates <= "2017-01-01", "calibration", "hindcast")) %>%
# 	filter(species != "other")# replace

tax_hindcast_data <- readRDS(here("data/summary/hindcast_single_tax.rds"))

hindcast_data <- rbindlist(list(div_hindcast_data,
																fg_hindcast_data,
																tax_hindcast_data), fill = T)

hindcast_data$only_rank <- sapply(str_split(hindcast_data$rank, "_",  n = 2), `[`, 1)
hindcast_data$only_rank <- ordered(hindcast_data$only_rank, levels = c("genus",
																																			 "family",
																																			 "order",
																																			 "class",
																																			 "phylum", "functional", "diversity"))
hindcast_data$rank <- ordered(hindcast_data$rank, levels = c("genus_bac","genus_fun",
																														 "family_bac","family_fun",
																														 "order_bac", "order_fun",
																														 "class_bac", "class_fun",
																														 "phylum_bac","phylum_fun",
																														 "functional_group", "diversity_16S", "diversity_ITS"))


# Add prettier data values
hindcast_data$newsite <- ifelse(hindcast_data$new_site, "New site", "Observed site")
hindcast_data$pretty_group <- ifelse(hindcast_data$group=="16S", "Bacteria", "Fungi")
hindcast_data$pretty_name <- recode(hindcast_data$rank, !!!microbialForecast:::pretty_rank_names)
hindcast_data$pretty_name <- ordered(hindcast_data$pretty_name, levels = c("Genus",
																																					 "Family",
																																					 "Order",
																																					 "Class",
																																					 "Phylum", "Functional group", "Diversity"))

saveRDS(hindcast_data, here("data/summary/all_hindcasts.rds"))
