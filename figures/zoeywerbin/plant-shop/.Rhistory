library(shinydashboard)
library(shiny)
runApp()
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader("Zoey and Dana's Plant Shop",
dashboardHeader(dropdownMenuOutput("messageMenu"))),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(
)
)
ui <- dashboardPage(
dashboardHeader("Zoey and Dana's Plant Shop",
dashboardHeader(dropdownMenuOutput("messageMenu"))),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(
box("test")
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
ui <- dashboardPage(
dashboardHeader("Zoey and Dana's Plant Shop",
dashboardHeader(dropdownMenuOutput("messageMenu"))),
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(
box("test")
)
)
runApp()
ui <- dashboardPage(
dashboardHeader(title = "Dynamic sidebar"),
dashboardSidebar(
sidebarMenu(
menuItemOutput("menuitem")
)
),
dashboardBody()
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
# Define UI for application that draws a histogram
ui <- dashboardPage(
dashboardHeader(title = "Buy some green from Zoey and Dana",
titleWidth = 350,
dropdownMenuOutput("messageMenu")),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(  box("test")
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Define UI for application that draws a histogram
ui <- dashboardPage(
skin = "green",
dashboardHeader(title = "Buy some green from Dan and Zoey",
titleWidth = 420,
dropdownMenuOutput("messageMenu")),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(
tabsetPanel(id = "terrarium",
box(title = "How much light do you have to work with?",
sliderInput("light", "Available light (0 = far from a window; 10 = south-facing window or outside:", 1, 10, 5)
),
box(title = "Pick a container size and type:",
radioButtons("container", "Container type/size",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
),
box(title = "Pick your large plant(s):",
checkboxInput("plants", "Choose between 0-3 large plants",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
),
box("test"),
tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 19px;
}
')))
)
) # close dashboardBody
) # close server
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Define UI for application that draws a histogram
ui <- dashboardPage(
skin = "green",
dashboardHeader(title = "Buy some green from Dan and Zoey",
titleWidth = 420,
dropdownMenuOutput("messageMenu")),
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
),
dashboardBody(
tabsetPanel(id = "terrarium",
box(title = "How much light do you have to work with?",
sliderInput("light", "Available light (0 = far from a window; 10 = south-facing window or outside:", 1, 10, 5)
),
box(title = "Pick a container size and type:",
radioButtons("container", "Container type/size",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
),
box(title = "Pick your large plant(s):",
checkboxInput("plants", "Choose between 0-3 large plants",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
),
box("test"),
tags$head(tags$style(HTML('
.main-header .logo {
font-family: "Georgia", Times, "Times New Roman", serif;
font-weight: bold;
font-size: 19px;
}
')))
)
) # close dashboardBody
) # close dashboardPage
# Define UI for application that draws a histogram
ui <- dashboardPage(
skin = "green",
dashboardHeader(title = "Buy some green from Dan and Zoey",
titleWidth = 420,
dropdownMenuOutput("messageMenu")
), # close dashboard Header
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
), # close dashboard Sidebar
dashboardBody(
tabsetPanel(id = "terrarium",
fluidRow(
box(title = "How much light do you have to work with?",
sliderInput("light", "Available light (0 = far from a window; 10 = south-facing window or outside:", 1, 10, 5)
),
box(title = "Pick a container size and type:",
radioButtons("container", "Container type/size",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
),
box(title = "Pick your large plant(s):",
checkboxInput("plants", "Choose between 0-3 large plants",
c("glass" = "small glass orb ($4)",
"glass" = "large glass orb ($6)",
"glass" = "small glass teardrop ($6)",
"glass" = "aquarium ($25)",
"glass" = "centerpiece ($15)"))
)
) #close fluidRow
)
) # close dashboardBody
) # close dashboardPage
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(shinydashboard)
# Define UI for application that draws a histogram
ui <- dashboardPage(
skin = "green",
dashboardHeader(title = "Buy some green from Dan and Zoey",
titleWidth = 420,
dropdownMenuOutput("messageMenu")
), # close dashboard Header
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
), # close dashboard Sidebar
dashboardBody(
tabsetPanel(id = "terrarium",
fluidRow(
box(title = "How much light do you have to work with?",
sliderInput("light", "Available light (0 = far from a window; 10 = south-facing window or outside:", 1, 10, 5)
),
box(title = "Pick a container size and type:",
radioButtons("container", "Container type/size",
c("small glass orb ($4)" = "small_orb",
"large glass orb ($6)" = "large_orb",
"small glass teardrop ($6)" = "small+teardrop",
"aquarium ($25)" = "aquarium",
"centerpiece ($15)" = "centerpiece"))
),
box(title = "Pick large plant(s):",
checkboxGroupInput("plants", "Choose between 0-3 large plants",
c("arrowhead plant (syngonium sp.) ($4)" = "syngonium",
"fittonia ($4)"= "fittonia",
"lemon button fern ($9)" = "lemon_button",
"prayer plant ($8)" = "prayer_plant",
"coleus ($8)" = "coleus",
"heart-leaf philodendron (p. scandens) ($12)" = "micans"))),
box(title = "Pick small plants(s)":
checkboxGroupInput("small_plants", label = "Choose between 0-3 small plants",
choices = c("tall air plant ($4)" = "tall_airplant",
"round air plant ($4)" = "round_airplant",
"miniature oakleaf creeping fig ($3)" = "creeping_fig"))),
box(title = "Add extras":
checkboxGroupInput("extras", "Choose between 0-3 additional things:",
c("unicorn ($1)" = "unicorn",
"dinosaur ($1)" = "dinosaur",
"crystal ($3)" = "crystal",
"decorative moss ($2)" = "moss"
)))
) #close fluidRow
)
) # close dashboardBody
) # close dashboardPage
#
# tags$head(tags$style(HTML('
#       .main-header .logo {
#                           font-family: "Georgia", Times, "Times New Roman", serif;
#                           font-weight: bold;
#                           font-size: 19px;
#                           }
#                           ')))
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(shinydashboard)
# Define UI for application that draws a histogram
ui <- dashboardPage(
skin = "green",
dashboardHeader(title = "Buy some green from Dan and Zoey",
titleWidth = 420,
dropdownMenuOutput("messageMenu")
), # close dashboard Header
dashboardSidebar(
sidebarMenu(
menuItem("Home", tabName = "home", icon = icon("house")),
menuItem("Design a terrarium", icon = icon("stone"), tabName = "terrarium"),
menuItem("Plant shop", icon = icon("plant"), tabName = "plants"),
menuItem("Art shop", icon = icon("paintbrush"), tabName = "art")
)
), # close dashboard Sidebar
dashboardBody(
tabsetPanel(id = "terrarium",
fluidRow(
box(title = "How much light do you have to work with?",
sliderInput("light", "Available light (0 = far from a window; 10 = south-facing window or outside:", 1, 10, 5)
),
box(title = "Pick a container size and type:",
radioButtons("container", "Container type/size",
c("small glass orb ($4)" = "small_orb",
"large glass orb ($6)" = "large_orb",
"small glass teardrop ($6)" = "small+teardrop",
"aquarium ($25)" = "aquarium",
"centerpiece ($15)" = "centerpiece"))
),
box(title = "Pick large plant(s):",
checkboxGroupInput("plants", "Choose between 0-3 large plants",
c("arrowhead plant (syngonium sp.) ($4)" = "syngonium",
"fittonia ($4)"= "fittonia",
"lemon button fern ($9)" = "lemon_button",
"prayer plant ($8)" = "prayer_plant",
"coleus ($8)" = "coleus",
"heart-leaf philodendron (p. scandens) ($12)" = "micans"))),
box(title = "Pick small plants(s)":
checkboxGroupInput("small_plants", label = "Choose between 0-3 small plants",
choices = c(
"tall air plant ($4)" = "tall_airplant",
"round air plant ($4)" = "round_airplant",
"mini oakleaf creeping fig ($3)" = "creeping_fig"))),
box(title = "Add extras":
checkboxGroupInput("extras", "Choose between 0-3 additional things:",
c("unicorn ($1)" = "unicorn",
"dinosaur ($1)" = "dinosaur",
"crystal ($3)" = "crystal",
"decorative moss ($2)" = "moss"
)))
) #close fluidRow
)
) # close dashboardBody
) # close dashboardPage
#
# tags$head(tags$style(HTML('
#       .main-header .logo {
#                           font-family: "Georgia", Times, "Times New Roman", serif;
#                           font-weight: bold;
#                           font-size: 19px;
#                           }
#                           ')))
# Define server logic required to draw a histogram
server <- function(input, output) {
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv("~/Downloads/12866_2017_1101_MOESM3_ESM.xlsx")
df <- read.csv("~/Downloads/12866_2017_1101_MOESM3_ESM.xlsx", header = TRUE, skip = 1)
head(df)
df <- read.csv("~/Downloads/12866_2017_1101_MOESM3_ESM.xlsx", header = TRUE, skip = 1)
library(xlsx)
library(frad)
library(fread)
library(data.table)
df <- fread("~/Downloads/12866_2017_1101_MOESM3_ESM.xlsx", header = TRUE, skip = 1)
df <- fread("~/Downloads/dadaVsQIIME.csv", header = TRUE, skip = 1)
head(df)
df <- fread("~/Downloads/dadaVsQIIME.csv", header = TRUE)
head(df)
df <- fread("~/Downloads/dadaVsQIIME.csv")
head(df)
acido <- df[grep("Acido", df$Phylum),]
dim(acido)
df$Phylum
acido <- df[grep("Firmi", df$Phylum),]
firmi <- df[grep("Firmi", df$Phylum),]
firmi
dim(firmi)
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99)
Bactero <- df[grep("Bactero", df$Phylum),]
plot(Bactero$Control_DADA2.DADA2, Bactero$Control_GG99.GG99)
library(fread)
df <- fread("~/Downloads/dadaVsQIIME.csv")
head(df)
firmi <- df[grep("Firmi", df$Phylum),]
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99)
Bactero <- df[grep("Bactero", df$Phylum),]
plot(Bactero$Control_DADA2.DADA2, Bactero$Control_GG99.GG99)
setwd("~/")
df <- fread("~/Downloads/dadaVsQIIME.csv")
library(fread)
df <- fread("~/Downloads/dadaVsQIIME.csv")
df <- read.csv("~/Downloads/dadaVsQIIME.csv")
head(df)
firmi <- df[grep("Firmi", df$Phylum),]
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99)
Bactero <- df[grep("Bactero", df$Phylum),]
plot(Bactero$Control_DADA2.DADA2, Bactero$Control_GG99.GG99)
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99)
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99); abline(0,1)
plot(Bactero$Control_DADA2.DADA2, Bactero$Control_GG99.GG99); abline(0,1)
plot(firmi$Control_DADA2.DADA2, firmi$Control_GG99.GG99); abline(0,1)
df
table(df$Phylum)
