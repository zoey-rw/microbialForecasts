rm(list = ls())
library(data.table)
library(doParallel)
source('NEFI_functions/tic_toc.r')
source('NEFI_functions/crib_fun.r')
source('paths.r')
#source('NEFI_functions/ddirch_site.level_JAGS.r')
library(RCurl)
# source function from colins github
script <- getURL("https://raw.githubusercontent.com/colinaverill/NEFI_microbe/master/NEFI_functions/ddirch_site.level_JAGS.r", ssl.verifypeer = FALSE)
eval(parse(text = script))
#detect and register cores.
n.cores <- detectCores()
registerDoParallel(cores=n.cores)
y <- readRDS("/projectnb/talbot-lab-data/NEFI_data/16S/Ramirez/emp_bahram_ramirez_abundances.rds")
d <- readRDS("/projectnb/talbot-lab-data/NEFI_data/16S/scc_gen/prior_abundance_mapping/mapping_all_sources.rds")
names(y) <- c("phylum","class","order","family","genus")
#Drop in intercept, setup predictor matrix.
x <- d
rownames(x) <- x$sampleID
x$sampleID <- NULL
intercept <- rep(1, nrow(x))
x <- cbind(intercept, x)
x$pals <- NULL
x$study_id <- NULL
x$ph <- NULL
x$ph_estim <- NULL
x$source <- NULL
x$biome <- NULL
x <- x[,colnames(x) %in% c("intercept","latitude", "map", "mat", "new.ph")]
x <- x[,colnames(x) %in% c("intercept","new.ph")]
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
qstat -u zrwerbin
ssh -Y zrwerbin@geo.bu.edu -L 7777:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7778:localhost:8787
ssh -Y zrwerbin@geo.bu.edu -L 7778:localhost:8787
