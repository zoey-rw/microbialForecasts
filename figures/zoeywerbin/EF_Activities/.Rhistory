#   dates_out <- do.call(plyr::rbind.fill,dates_out)
#   sites_out[[i]] <- dates_out
#   names(sites_out)[i] <- site
# }
#
# #combine site-level dataframe into one dataframe.
# output <- do.call(plyr::rbind.fill,sites_out)
}
dput(n_fixation)
dissim_nitrate <- data.frame(stringsAsFactors=FALSE,
V1 = c("napB", "napC", "narG", "narH", "narJ", "narI", "narZ",
"narY", "narV", "narW", "nirB", "nirD", "nrfA", "nrfB",
"nrfC", "nrfD"),
V2 = c("Cytochrome c-type protein NapB",
"Cytochrome c-type protein NapC", "Nitrate reductase",
"Nitrate reductase",
"Nitrate reductase molybdenum cofactor assembly chaperone", "Nitrate reductase gamma subunit",
"Nitrate reductase 2, alpha subunit", "Nitrate reductase 2, beta subunit",
"Nitrate reductase 2, gamma subunit", "Nitrate reductase 2,
delta subunit", "Nitrite reductase (NADH) large subunit",
"Nitrite reductase (NADH) small subunit", "Nitrite reductase (cytochrome c-552)",
"Cytochrome c-type protein NrfB", "Protein NrfC",
"Protein NrfD"),
V3 = c(428L, 503L, 1961L, 854L, 930L, 914L, 691L, 469L, 56L, 49L,
1938L, 2030L, 649L, 133L, 921L, 181L),
V4 = c(622L, 1062L, 4254L, 2295L, 1716L, 1742L, 2154L, 891L, 154L,
200L, 4069L, 3061L, 1483L, 374L, 1306L, 363L),
V5 = c(1L, 1L, 1L, 6L, 2L, 1L, 0L, 2L, 0L, 0L, 12L, 4L, 0L, 0L, 15L,
1L),
V6 = c(4L, 1L, 3L, 8L, 1L, 1L, 2L, 8L, 0L, 0L, 21L, 16L, 3L, 0L, 14L,
0L),
V7 = c(0L, 2L, 1L, 3L, 1L, 1L, 0L, 0L, 0L, 0L, 10L, 5L, 1L, 0L, 10L,
1L),
V8 = c(1L, 2L, 5L, 5L, 3L, 2L, 4L, 9L, 0L, 0L, 29L, 18L, 1L, 1L, 23L,
2L)
)
dissim_nitrate
dissim_nitrate$V1
dissim_nitrate <- dissim_nitrate$V1
dput(dissim_nitrate)
assim_nitrate <-	c("nasA","nasB","nirA","NR","narB","narC")
n_fix <- data.frame(stringsAsFactors=FALSE,
NAanfG = c("nifD", "nifH", "nifK", "nifW"),
NANitrogenase.delta.subunit = c("Nitrogenase molybdenum-iron protein alpha chain", "Nitrogenase iron protein NifH",
"Nitrogenase molybdenum-iron protein beta chain",
"Nitrogenase-stabilizing/protective protein"),
NA49 = c(1063L, 3821L, 689L, 484L),
NA57 = c(1755L, 14757L, 1005L, 622L),
NANA = c(0L, 10L, 1L, 3L),
NA0 = c(3L, 12L, 2L, 4L),
NA0 = c(3L, 6L, 1L, 2L),
NA0 = c(5L, 12L, 6L, 3L)
)
n_fix <- data.frame(stringsAsFactors=FALSE,
V1 = c("anfG", "nifD", "nifH", "nifK", "nifW"),
V2 = c("Nitrogenase delta subunit",
"Nitrogenase molybdenum-iron protein alpha chain",
"Nitrogenase iron protein NifH",
"Nitrogenase molybdenum-iron protein beta chain",
"Nitrogenase-stabilizing/protective protein"),
V3 = c(49L, 1063L, 3821L, 689L, 484L),
V4 = c(57L, 1755L, 14757L, 1005L, 622L),
V5 = c(1L, 0L, 10L, 1L, 3L),
V6 = c(0L, 3L, 12L, 2L, 4L),
V7 = c(0L, 3L, 6L, 1L, 2L),
V8 = c(0L, 5L, 12L, 6L, 3L)
)
n_fixation <- n_fix$V1
dput(n_fixation)
data.frame(stringsAsFactors=FALSE,
hzo = c("hzsA", "hzsB", "hzsC", "hdh"),
Hydrazine.oxidoreductase = c("Hydrazine synthase subunit A",
"Hydrazine synthase subunit B",
"Hydrazine synthase subunit C", "Hydrazine dehydrogenase"),
67 = c(51L, 39L, 22L, 2L),
1140 = c(250L, 514L, 198L, 3L),
1 = c(NA, 1L, NA, NA),
1 = c(NA, 3L, NA, NA),
1 = c(NA, NA, NA, NA),
1 = c(NA, NA, NA, NA)
)
anammox <- data.frame(stringsAsFactors=FALSE,
V1 = c("hzo", "hzsA", "hzsB", "hzsC", "hdh"),
V2 = c("Hydrazine oxidoreductase", "Hydrazine synthase subunit A",
"Hydrazine synthase subunit B",
"Hydrazine synthase subunit C", "Hydrazine dehydrogenase"),
V3 = c(67L, 51L, 39L, 22L, 2L),
V4 = c(1140L, 25L, 514L, 198L, 3L)
)
dput(anammox$V1)
deg <- data.frame(stringsAsFactors=FALSE,
V1 = c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260",
"gdh_K00261", "gdh_K00262", "gdh_K15371", "gs_K00264",
"gs_K00265", "gs_K00266", "gs_K00284", "glsA", "glnA",
"asnB", "ansB"),
V2 = c("Urease subunit gamma", "Urease subunit beta",
"Urease subunit alpha", "Nitroalkane oxidase",
"Nitronate monooxygenase", "Glutamate dehydrogenase",
"Glutamate dehydrogenase", "Glutamate dehydrogenase",
"Glutamate dehydrogenase", "Glutamate synthase",
"Glutamate synthase large chain", "Glutamate synthase small chain",
"Glutamate synthase", "Glutaminase", "Glutamine synthetase",
"Asparagine synthase", "Glu"),
V3 = c(2351L, 3171L, 3066L, 162L, 6000L, 266L, 1598L, 1850L, 1290L,
276L, 1384L, 2566L, 371L, 3540L, 8086L, 3960L, 457L),
V4 = c(4242L, 5218L, 7526L, 217L, 9335L, 431L, 2385L, 3487L, 2377L,
365L, 2184L, 3489L, 472L, 6657L, 15552L, 6317L, 624L),
V5 = c(3L, 3L, 3L, 0L, 19L, 0L, 5L, 3L, 20L, 5L, 4L, 27L, 2L, 8L, 7L,
6L, 1L),
V6 = c(4L, 14L, 7L, 1L, 49L, 0L, 7L, 8L, 39L, 5L, 6L, 42L, 1L, 25L,
15L, 10L, 6L),
V7 = c(3L, 5L, 5L, 0L, 27L, 1L, 5L, 3L, 13L, 2L, 1L, 12L, 2L, 8L, 8L,
3L, 4L),
V8 = c(4L, 11L, 19L, 3L, 32L, 0L, 3L, 2L, 34L, 6L, 7L, 43L, 2L, 11L,
13L, 12L, 3L)
)
dput(deg$V1)
Nitrification <- c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
Denitrification <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI","nirK", "nirS","norB","norC","nosZ","narZ","narY","narV","narW")
dissim_nitrate <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI", "narZ", "narY",
"narV", "narW", "nirB", "nirD", "nrfA", "nrfB", "nrfC", "nrfD"
)
assim_nitrate <-	c("nasA","nasB","nirA","NR","narB","narC")
n_fixation <- c("anfG", "nifD", "nifH", "nifK", "nifW")
anammox <- c("hzo", "hzsA", "hzsB", "hzsC", "hdh")
degradation_synthesis <- c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261",
"gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266",
"gs_K00284", "glsA", "glnA", "asnB", "ansB")
other <- c("hcp", "pmoA","pmoB","pmoC")
nitrification <- c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
denitrification <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI","nirK", "nirS","norB","norC","nosZ","narZ","narY","narV","narW")
dissimilatory_nitrate_reduction <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI", "narZ", "narY",
"narV", "narW", "nirB", "nirD", "nrfA", "nrfB", "nrfC", "nrfD"
)
assimilatory_nitrate_reduction <-	c("nasA","nasB","nirA","NR","narB","narC")
n_fixation <- c("anfG", "nifD", "nifH", "nifK", "nifW")
anammox <- c("hzo", "hzsA", "hzsB", "hzsC", "hdh")
degradation_and_synthesis <- c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261",
"gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266",
"gs_K00284", "glsA", "glnA", "asnB", "ansB")
other <- c("hcp", "pmoA","pmoB","pmoC")
nitrification <- c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
denitrification <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI","nirK", "nirS","norB","norC","nosZ","narZ","narY","narV","narW")
dissimilatory_nitrate_reduction <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI", "narZ", "narY", "narV", "narW", "nirB", "nirD", "nrfA", "nrfB", "nrfC", "nrfD")
assimilatory_nitrate_reduction <-	c("nasA","nasB","nirA","NR","narB","narC")
n_fixation <- c("anfG", "nifD", "nifH", "nifK", "nifW")
anammox <- c("hzo", "hzsA", "hzsB", "hzsC", "hdh")
degradation_and_synthesis <- c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261", "gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266", "gs_K00284", "glsA", "glnA", "asnB", "ansB")
other <- c("hcp", "pmoA","pmoB","pmoC")
stack(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other)
unstack(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other)
unstack(list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other))
stack(list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other))
nitrification <- "nitrification" = c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
nitrification <- list("nitrification" = c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB"))
nitrification
nitrification <- list("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
nitrification
nitrification <- list("nitrification" = c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB"))
denitrification <- list("denitrification" = c("napA", "napB", "napC", "narG", "narH", "narJ", "narI","nirK", "nirS","norB","norC","nosZ","narZ","narY","narV","narW"))
dissimilatory_nitrate_reduction <- list("dissimilatory_nitrate_reduction" =  c("napA", "napB", "napC", "narG", "narH", "narJ", "narI", "narZ", "narY", "narV", "narW", "nirB", "nirD", "nrfA", "nrfB", "nrfC", "nrfD"))
assimilatory_nitrate_reduction <-	 list("assimilatory_nitrate_reduction" = c("nasA","nasB","nirA","NR","narB","narC"))
n_fixation <- list("n_fixation" = c("anfG", "nifD", "nifH", "nifK", "nifW"))
anammox <- list("anammox" =c("hzo", "hzsA", "hzsB", "hzsC", "hdh"))
degradation_and_synthesis <- list("degradation_and_synthesis" = c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261", "gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266", "gs_K00284", "glsA", "glnA", "asnB", "ansB")
other <- list("other" = c("hcp", "pmoA","pmoB","pmoC"))
degradation_and_synthesis <- list("degradation_and_synthesis" = c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261", "gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266", "gs_K00284", "glsA", "glnA", "asnB", "ansB"))
other <- list("other" = c("hcp", "pmoA","pmoB","pmoC"))
stack(list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other))
unstack(list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other))
as.data.frame(list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other))
test <- list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other)
df <- list(list.element = test)
df
class(df) <- c("tbl_df", "data.frame")
attr(df, "row.names") <- .set_row_names(length(test))
df
library(dplyr)
list(site1 = c("url1", "url2"), site2 = c("url2", "url3", "url3")) %>%
enframe() %>%
unnest()
library(tibble)
list(site1 = c("url1", "url2"), site2 = c("url2", "url3", "url3")) %>%
enframe() %>%
unnest()
library(tidyr)
list(site1 = c("url1", "url2"), site2 = c("url2", "url3", "url3")) %>%
enframe() %>%
unnest()
test %>%
enframe() %>%
unnest()
test
unlist(test)
nitrification <- c("amoA_A", "amoB_A", "amoC_A", "amoA_B", "amoB_B", "amoC_B", "hao", "nxrA", "nxrB")
denitrification <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI","nirK", "nirS","norB","norC","nosZ","narZ","narY","narV","narW")
dissimilatory_nitrate_reduction <- c("napA", "napB", "napC", "narG", "narH", "narJ", "narI", "narZ", "narY", "narV", "narW", "nirB", "nirD", "nrfA", "nrfB", "nrfC", "nrfD")
assimilatory_nitrate_reduction <-	c("nasA","nasB","nirA","NR","narB","narC")
n_fixation <- c("anfG", "nifD", "nifH", "nifK", "nifW")
anammox <- c("hzo", "hzsA", "hzsB", "hzsC", "hdh")
degradation_and_synthesis <- c("ureA", "ureB", "ureC", "nao", "nmo", "gdh_K00260", "gdh_K00261", "gdh_K00262", "gdh_K15371", "gs_K00264", "gs_K00265", "gs_K00266", "gs_K00284", "glsA", "glnA", "asnB", "ansB")
other <- c("hcp", "pmoA","pmoB","pmoC")
list(nitrification, denitrification, dissimilatory_nitrate_reduction, assimilatory_nitrate_reduction, n_fixation, anammox, degradation_and_synthesis, other)
list("nitrification" = nitrification, "denitrification" = denitrification, "dissimilatory_nitrate_reduction" = dissimilatory_nitrate_reduction, "assimilatory_nitrate_reduction" = assimilatory_nitrate_reduction, "n_fixation" = n_fixation, "anammox" = anammox, "degradation_and_synthesis" = degradation_and_synthesis, "other" = other)
unstack(list("nitrification" = nitrification, "denitrification" = denitrification, "dissimilatory_nitrate_reduction" = dissimilatory_nitrate_reduction, "assimilatory_nitrate_reduction" = assimilatory_nitrate_reduction, "n_fixation" = n_fixation, "anammox" = anammox, "degradation_and_synthesis" = degradation_and_synthesis, "other" = other))
stack(list("nitrification" = nitrification, "denitrification" = denitrification, "dissimilatory_nitrate_reduction" = dissimilatory_nitrate_reduction, "assimilatory_nitrate_reduction" = assimilatory_nitrate_reduction, "n_fixation" = n_fixation, "anammox" = anammox, "degradation_and_synthesis" = degradation_and_synthesis, "other" = other))
test2 <- stack(list("nitrification" = nitrification, "denitrification" = denitrification, "dissimilatory_nitrate_reduction" = dissimilatory_nitrate_reduction, "assimilatory_nitrate_reduction" = assimilatory_nitrate_reduction, "n_fixation" = n_fixation, "anammox" = anammox, "degradation_and_synthesis" = degradation_and_synthesis, "other" = other))
colnames(test2) <- c("gene", "category")
test2
dput(test2)
test2
dput(test2)
library(xlsx)
library(xlsx)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv")
??fread
library(data.table)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv")
metadata <- fread("~/Downloads/delgado_metadata.csv")
dim(abun)
str(abun)
rel.abun <- abun/10000*100
rel.abun <- abun[,2:ncol(abun)]/10000*100
?fread
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- fread("~/Downloads/delgado_metadata.csv", header=T)
dim(abun)
rel.abun <- abun[,2:ncol(abun)]/10000*100
rel.abun$sampleID <- abun$`Dominant_taxa_ID/ID_Environmental`
head(rel.abun)
rowSums(rel.abun)
rel.abun <- abun[,2:ncol(abun)]/10000*100
rownames(rel.abun) <- abun$`Dominant_taxa_ID/ID_Environmental`
rowSums(rel.abun)
head(rel.abun)
head(abun)
head(rel.abun[1,])
rowSums(rel.abun[1,])
head(abun)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- fread("~/Downloads/delgado_metadata.csv", header=T)
dim(abun)
rownames(abun) <- abun$`Dominant_taxa_ID/ID_Environmental`
abun$`Dominant_taxa_ID/ID_Environmental` <- NULL
rel.abun <- (abun/10000)*100
head(rel.abun)
rowSums(rel.abun)
rel.abun <- (abun/10000)
rowSums(rel.abun)
dim(abun)
dim(metadata)
colSums(rel.abun)
#Grab all sites that have 16S sequence data.
#Get core-level sequence metadata from NEON API
req <- httr::GET("http://data.neonscience.org/api/v0/products/DP1.10107.001")
req.text <- httr::content(req, as="text")
avail <- jsonlite::fromJSON(req.text, simplifyDataFrame=T, flatten=T)
site_date <- cbind(avail$data$siteCodes[1],avail$data$siteCodes[2])
#grab a vector of the urls to data. One per unique site-date combination.
core.urls <- unlist(avail$data$siteCodes$availableDataUrls)
#loop through site-date combinations
sites_out <- list()
for(i in 1:nrow(site_date)){
site <- site_date[i,1]
dates <- unlist(site_date[i,2])
dates_out <- list()
for(k in 1:length(dates)){
date <- dates[k]
site.date <- paste0(site,'/',date)
#grab DP1.10108.001 data for a particular site-date combination.
core.JSON  <- httr::GET(core.urls[grep(site.date, core.urls)])
core.files <- jsonlite::fromJSON(httr::content(core.JSON, as='text'))
#check if it even has 16S data. If it doesn't, skip.
if(length(grep("rawData", core.files$data$files$name)) < 1){
cat(paste0(site.date,' has no raw metagenome data. move on. \n'))
next
} else cat(paste0(site.date,' DOES have raw metagenome data!\n'))
}
#Grab all sites that have 16S sequence data.
#Get core-level sequence metadata from NEON API
req <- httr::GET("http://data.neonscience.org/api/v0/products/DP1.10107.001")
req.text <- httr::content(req, as="text")
avail <- jsonlite::fromJSON(req.text, simplifyDataFrame=T, flatten=T)
site_date <- cbind(avail$data$siteCodes[1],avail$data$siteCodes[2])
#grab a vector of the urls to data. One per unique site-date combination.
core.urls <- unlist(avail$data$siteCodes$availableDataUrls)
#loop through site-date combinations
sites_out <- list()
for(i in 1:nrow(site_date)){
site <- site_date[i,1]
dates <- unlist(site_date[i,2])
dates_out <- list()
for(k in 1:length(dates)){
date <- dates[k]
site.date <- paste0(site,'/',date)
#grab DP1.10108.001 data for a particular site-date combination.
core.JSON  <- httr::GET(core.urls[grep(site.date, core.urls)])
core.files <- jsonlite::fromJSON(httr::content(core.JSON, as='text'))
#check if it even has 16S data. If it doesn't, skip.
if(length(grep("rawData", core.files$data$files$name)) < 1){
cat(paste0(site.date,' has no raw metagenome data. move on. \n'))
next
} else cat(paste0(site.date,' DOES have raw metagenome data!\n'))
}
#
# #If it does have 16S data, get it.
# core.data  <- read.delim(core.files$data$files$url
#                          [intersect(grep("rawData", core.files$data$files$name),
#                                     grep("expanded", core.files$data$files$name))], sep=",")
# core.data$dateID <- date
#
#   #get assocaited DNA extraction and concentration data if available.
#   if(length(grep('mmg_soilDnaExtraction',core.files$data$files$name)) > 0){
#     dna.data <- read.delim(core.files$data$files$url
#                            [intersect(grep("mmg_soilDnaExtraction", core.files$data$files$name),
#                                       grep("expanded", core.files$data$files$name))], sep=",")
#     #merge this into 16S description.
#     dna.merge <- dna.data[,!(colnames(dna.data) %in% colnames(core.data))]
#     dna.merge$dnaSampleID <- dna.data$dnaSampleID
#     site_date.output <- merge(core.data,dna.merge, all = T)
#   }
#   #If there is no DNA concentration data this is chill too. Just fill NAs.
#   if(length(grep('mmg_soilDnaExtraction',core.files$data$files$name)) ==0){
#     dna.data <- NA
#     dna.merge <- data.frame()
#     site_date.output <- plyr::rbind.fill(core.data,dna.merge)
#   }
#
#   dates_out[[k]] <- site_date.output
# }
#
# if(length(dates_out) > 0){
#   dates_out <- do.call(plyr::rbind.fill,dates_out)
#   sites_out[[i]] <- dates_out
#   names(sites_out)[i] <- site
# }
#
# #combine site-level dataframe into one dataframe.
# output <- do.call(plyr::rbind.fill,sites_out)
}
L1mic <- loadByProduct(startdate = "2013-01", enddate = "2017-12", dpID = 'DP1.10107.001', check.size = FALSE, package=’expanded’)
L1mic <- loadByProduct(startdate = "2013-01", enddate = "2017-12", dpID = 'DP1.10107.001', check.size = FALSE, package='expanded')
library(neonUtilities)
L1mic <- loadByProduct(startdate = "2013-01", enddate = "2017-12", dpID = 'DP1.10107.001', check.size = FALSE, package='expanded')
L1mic.dna <- L1mic$mms_metagenomeDnaExtraction   # create data frame for metagenome DNA extraction data
L1mic.dna <- L1mic.dna[grep("metagenomics", L1mic.dna$sequenceAnalysisType),]  # filter to only DNA extraction records for metagenomics (raw data also has marker gene records)
L1mmsSeq <- L1mic$mms_metagenomeSequencing   # create data frame for metagenome sequencing L1 data
L1mmsRaw <- L1mic$mms_rawDataFiles
head(L1mmsRaw)
library(neonUtilities)
loadByProduct(dpID = "DP1.10111.001")
disturbance_dp <- loadByProduct(dpID = "DP1.10111.001")
disturbance_dp$sim_eventData
table(disturbance_dp$sim_eventData$eventType)
library(data.table)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- fread("~/Downloads/delgado_metadata.csv", header=T)
dim(abun)
rownames(abun) <- abun$`Dominant_taxa_ID/ID_Environmental`
head(abun)
colnames(abun)
rownames(abun)
b
b
abun <- t(abun)
head(abun)
colnames(abun)
rownames(abun)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- fread("~/Downloads/delgado_metadata.csv", header=T)
dim(abun)
abun <- as.data.frame(abun)
head(abun)
abun <- t(abun)
head(abun)
dim(abun)
colnames(abun)
rownames(abun)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
head(rownames(abun))
head(abun)
rownames(abun) <- abun$`Dominant_taxa_ID/ID_Environmental`
head(abun)
rownames(abun)
abun$`Dominant_taxa_ID/ID_Environmental` <- NULL
head(abun)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
head(abun)
abun <- fread("~/Downloads/delgado_dominant_abundances.csv", header=T)
class(abun)
abun <- data.frame(abun)
class(abun)
head(abun)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
head(abun)
gsub("X", "sample", colnames(abun))
colnames(abun) <- gsub("X", "site", colnames(abun))
head(abun)
abun <- t(abun)
head(abun)
colnames(abun)
row(abun)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
head(abun)
colnames(abun)
rownames(abun)
head(abun)
abun$`Dominant_taxa_ID/ID_Environmental`
class(abun)
abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID/ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
head(abun)
abun <- t(abun)
head(abun)
rowSums(site1)
rowSums(abun)
rel.abun <- (abun/10000)*100
rel.abun
rowSums(rel.abun)
dim(rel.abun)
tail(rel.abun)
rel.abun$other <- 1 - rowSums(rel.abun)
rel.abun
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun <- t(abun)
rel.abun <- (abun/10000)*100
class(rel.abun)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun <- as.data.frame(t(abun))
rel.abun <- (abun/10000)*100
rowSums(rel.abun)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun.mat <- t(abun)
abun <- as.data.frame(t(abun))
head(abun)
abun[1:5,1:5]
abun.mat[1:5,1:5]
rel.abun.mat <- (abun.mat/10000)*100
rel.abun <- (abun/10000)*100
rel.abun.mat[1:5,1:5]
rel.abun[1:5,1:5]
rowSums(rel.abun)
rowSums(rel.abun.may)
rowSums(rel.abun.mat)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun.mat <- t(abun)
rel.abun <- (abun/10000)*100
rel.abun[1:5,1:5]
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun <- t(abun)
rel.abun <- (abun/10000)*100
rel.abun[1:5,1:5]
class(abun)
abun[1:5,1:5]
73/10000
.0073 * 100
rel.abun <- (abun/10000)
rel.abun[1:5,1:5]
rowSums(rel.abun)
rel.abun$other <- 1 - rowSums(rel.abun)
rel.abun <- (abun/10000)
abun <- read.csv("~/Downloads/delgado_dominant_abundances.csv", header=T)
metadata <- read.csv("~/Downloads/delgado_metadata.csv", header=T)
head(abun)
colnames(abun) <- gsub("X", "site", colnames(abun))
rownames(abun) <- abun$Dominant_taxa_ID.ID_Environmental
abun$Dominant_taxa_ID.ID_Environmental <- NULL
abun <- as.data.frame(t(abun))
rel.abun <- (abun/10000)
rowSums(rel.abun)
rel.abun$other <- 1 - rowSums(rel.abun)
rowSums(rel.abun)
head(metadata)
head(rel.abun)
rel.abun[1:9,1:9]
rowSums(rel.abun)
rel.abun[1:9,1:20]
